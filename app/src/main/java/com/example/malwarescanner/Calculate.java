package com.example.malwarescanner;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.graphics.Color;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.mikhaellopez.circularprogressbar.CircularProgressBar;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
public class Calculate extends AppCompatActivity {
    TextView textLoad, textMessage, warning , type;
    Button recommendation;
    String strMessage = "";
    String[] arrOfstr;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_calculate);
        textLoad = findViewById(R.id.textLoad);
        textMessage = findViewById(R.id.textMessage);
        warning = findViewById(R.id.warning);
        type = findViewById(R.id.type);
        recommendation = (Button)findViewById(R.id.recommendation);
        String appID = getIntent().getStringExtra("value");
        textLoad.setText("Analyzing Appdata...");
        strMessage = "https://avengersthesis.herokuapp.com/?id="+appID;
        new MyTask().execute();
    }
    private class MyTask extends AsyncTask<Void, Void, Void>{
        String result;
        @Override
        protected Void doInBackground(Void... voids) {
            URL url;
            try {
                url = new URL(strMessage);
                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(url.openStream()));
                String stringBuffer;
                String string = "";
                while ((stringBuffer = bufferedReader.readLine()) != null){
                    string = String.format("%s%s", string, stringBuffer);
                }
                bufferedReader.close();
                result = string;
            } catch (IOException e){
                e.printStackTrace();
                result = e.toString();
            }
            return null;

        }
        @Override
        protected void onPostExecute(Void aVoid) {
            CircularProgressBar circularProgressBar = findViewById(R.id.circularProgressBar);
            arrOfstr = result.split(" ");
            if(arrOfstr[0].equals("Benign")) {
                warning.setText("Safe");
                textMessage.setTextColor(Color.parseColor("#37e576"));
                circularProgressBar.setProgressBarColor(Color.parseColor("#37e576"));
            }
            else {
                warning.setText("Malware");
                type.setText("Type : "+arrOfstr[0]);
                textMessage.setTextColor(Color.parseColor("#ff5852"));
                circularProgressBar.setProgressBarColor(Color.parseColor("#ff5852"));
                recommendation.setVisibility(View.VISIBLE);
            }
            double str1 = Double.parseDouble(arrOfstr[1]);
            textMessage.setText(arrOfstr[1]+'%');
            circularProgressBar.setProgress((float)str1);
            circularProgressBar.setProgressWithAnimation((float)str1, (long) 120000);
            textLoad.setText("");
            super.onPostExecute(aVoid);

            recommendation.setOnClickListener(new Button.OnClickListener()
            {
                @Override
                public void onClick(View v) {
                    Intent intent = new Intent(Calculate.this,Recommendation.class);
                    intent.putExtra("type",arrOfstr[0]);
                    startActivity(intent);
                }
            });
        }
    }
}